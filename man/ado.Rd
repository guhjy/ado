% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ado.R
\name{ado}
\alias{ado}
\title{Interpret ado code interactively or from a file.}
\usage{
ado(dta = NULL, filename = NULL, string = NULL, assign.back = FALSE,
  debug_level = 0, echo = NULL)
}
\arguments{
\item{dta}{If NULL, start with an empty dataset; if a data.frame, use a copy
of the data.frame to initialize the dataset.}

\item{filename}{The path to an ado script to execute. At least one of filename
and string must be NULL.}

\item{string}{A length-1 character vector to read command input from. At least
one of filename and string must be NULL.}

\item{assign.back}{If TRUE, copy the final dataset state to a variable in the
caller's environment on function exit. The variable name is
the name (in the caller's environment) of the data.frame
passed as the dta argument, or if dta was NULL, the name "dta"
is used. The effect is to modify the passed data.frame, though
the old value will not necessarily be garbage-collected.}

\item{debug_level}{How verbose debug messages should be.}

\item{echo}{Whether to echo command input. Values 0, 1, and NULL are accepted;
if NULL, echo only when running non-interactively.}
}
\value{
Invisible NULL.
}
\description{
An interpreter for a dialect of Stata's ado language. The ado dialect is
close to the one Stata provides; see the package vignettes for full details.
}

