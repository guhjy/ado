Now:
  o) syntax for weird commands
    o) collapse
    o) recode
    o) possibly egen
    o) possibly gsort
    o) possible pctile

  o) if block construct

  o) Macro substitution
    o) need to find a way to lex nested macros and recursively substitute
       their values from the symbol table - use flex start conditions
    o) "compound double quotes"

Backend:
  o) the way you're trying to make rstata_env's contents be in scope isn't working

  o) infrastructural R functions
    o) varlist_to_formula
    o) for operators - how many of these even need to exist?
    o) for prefix commands - quietly, noisily, capture, by, xi

  o) R functions for initial general commands

  o) better error messages
      o) from check() and codegen()
      o) methods take debug_level arguments; now they need to act on them

  o) Stata's "stored results"

  o) complete all the commands which now have stubs

  o) "special" abreviations like tab

Frontend:
  o) Loops: much harder, because of macros

===============================================================================
Systematic debugging:
  o) use testthat and travis
  o) write a unit test suite
  o) test, test, test...

Documentation:
  o) document package object and rstata()
  o) update README
  o) long vignette: comprehensive
  o) short vignette: summary + differences from Stata
  o) document the R expression format the parser emits

Misc:
  o) figure out the NAMESPACE and what you have to export
  o) Makevars and Makefile have to come from a configure script for
     portability - autoconf?

===============================================================================
Wishlist functionality:
  o) the way it stores ado command history is a godawful hack, probably
     also a race condition, and is Unix-specific

  o) A mechanism for the user to register an R function obeying the
     calling convention as a Stata command, persistently

  o) graphics
