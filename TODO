======================================================================
Roadmap:

Immediate TODO:
    o) finish as_expr methods, make refactored parser compile
    o) finish expression-parsing code in ado.ypp, testing with gen
    o) test

Next up:
    o) edit the grammar to support missings, dates, other number
       formats, general varlists
    o) fill in syntax rules and actions for remaining commands
    o) grammar for flow control

Semantics:
    o) start implementing eval_stata() and a semantics
======================================================================

======================================================================
Things the grammar doesn't but should support:

date and time literals
varlists: factors, interactions, etc
scientific notation numbers
hex and binary numbers
numeric storage types

missing data

basic flow control
    capture
    foreach
    while
    forvalues

macros...

a syntax for running R code within ado
======================================================================

======================================================================
Deploy checklist:

* Edit the help file skeletons in 'man', possibly combining help files
  for multiple functions.
* Edit the exports in 'NAMESPACE', and add necessary imports.
* Put any C/C++/Fortran code in 'src'.
* If you have compiled code, add a useDynLib() directive to
  'NAMESPACE'.
* Run R CMD build to build the package tarball.
* Run R CMD check to check the package tarball.

Read "Writing R Extensions" for more information.
======================================================================

